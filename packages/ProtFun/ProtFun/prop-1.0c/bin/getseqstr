#!/usr/bin/gawk
#
# This script provides a skeleton for parsing HOW entries.
#
# VERSION: 29 Sep 1997, K. Rapacki  F flank, P pos
#

# edited 02.aug.2001, N.Blom
# 	For ProP output we want 6+1+2=9 residues, of form PPPPPPQvMM,
# 	where P is propeptide, Q is residue at cleavage site, 
# 	v is cleavage site, M is mature sequence

/^[ 0-9]?[ 0-9][ 0-9][ 0-9][ 0-9][0-9] [A-Za-z0-9]/{
					# HEADER LINE -------------------------
  len		= $1;			# sequence length
  name		= $2;			# sequence name
  comment	= $3;			# header line comment

  seq		= "";			# sequence
  ass		= "";			# assignment

  for (i=4; i<=NF; i++)			# read comment
      comment = (comment " " $i);

  seq_in = 1;				# activate sequence reading
  curr_len=len;				# left to read
  next;
}

seq_in {				# SEQUENCE LINE -----------------------
  seq = (seq $1);			# add to sequence
  curr_len = curr_len - 80;		# left to read
  if (curr_len <= 0) {			# if last sequence line
     seq_in = 0;			# ... desactivate sequence reading
     ass_in = 1;			# ... activate assignment reading
     curr_len = len;			# ... left to read
  }
  next;
}

ass_in {				# ASSIGNMENT LINE ---------------------
  ass = (ass $1);			# add to assignment
  curr_len = curr_len - 80;		# left to read
  if (curr_len <= 0) {			# if last assignment line
     ass_in = 0;			# ... desactivate assignment reading
     done = 1;				# ... entry completed
  }
}

done {					# ENTRY NOW AVAILABLE -----------------
  #
  # HERE: HOWentry is parsed: len, name, comment, seq, ass
  #
  #printf("%5d %-11s %s\n",len,name,comment);
  #for (i=1;length(substr(seq,i)); i=i+80)
  #    printf("%-80s%7d\n",substr(seq,i,80),i+79);
  #for (i=1;length(substr(ass,i)); i=i+80)
  #    printf("%-80s%7d\n",substr(ass,i,80),i+79);

  print ("------" seq "------");		# increased borders to 6 '-' at each end

  done = 0;
}
