# Makefile.in generated by automake 1.9.6 from Makefile.am.
# hmmer/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Process this file with automake to produce Makefile.in
# hmmer dir

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/libpsortb
pkglibdir = $(libdir)/libpsortb
pkgincludedir = $(includedir)/libpsortb
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = hmmer
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libhmmer_la_LIBADD =
am_libhmmer_la_OBJECTS = libhmmer_la-alphabet.lo \
	libhmmer_la-core_algorithms.lo libhmmer_la-debug.lo \
	libhmmer_la-display.lo libhmmer_la-emit.lo \
	libhmmer_la-emulation.lo libhmmer_la-histogram.lo \
	libhmmer_la-hmmio.lo libhmmer_la-mathsupport.lo \
	libhmmer_la-masks.lo libhmmer_la-misc.lo \
	libhmmer_la-modelmakers.lo libhmmer_la-plan7.lo \
	libhmmer_la-plan9.lo libhmmer_la-postprob.lo \
	libhmmer_la-prior.lo libhmmer_la-pvm.lo libhmmer_la-threads.lo \
	libhmmer_la-tophits.lo libhmmer_la-trace.lo
libhmmer_la_OBJECTS = $(am_libhmmer_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libhmmer_la_SOURCES)
DIST_SOURCES = $(libhmmer_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/cmgfunc/ProtFun/ProtFun/bio-tools-psort-all/libpsortb-1.0/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/cmgfunc/ProtFun/ProtFun/bio-tools-psort-all/libpsortb-1.0/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/cmgfunc/ProtFun/ProtFun/bio-tools-psort-all/libpsortb-1.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/cmgfunc/ProtFun/ProtFun/bio-tools-psort-all/libpsortb-1.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/cmgfunc/ProtFun/ProtFun/bio-tools-psort-all/libpsortb-1.0/missing --run automake-1.9
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -g -O2
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBnn = lib
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/cmgfunc/ProtFun/ProtFun/bio-tools-psort-all/libpsortb-1.0/missing --run makeinfo
OBJEXT = o
PACKAGE = libpsortb
PACKAGE_BUGREPORT = lairdm@sfu.ca
PACKAGE_NAME = libpsortb
PACKAGE_STRING = libpsortb 1.0
PACKAGE_TARNAME = libpsortb
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.0
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/cmgfunc/ProtFun/ProtFun/bio-tools-psort-all/libpsortb-1.0/install-sh
libdir = ${exec_prefix}/${LIBnn}
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
lib_LTLIBRARIES = libhmmer.la
libhmmer_la_SOURCES = alphabet.c core_algorithms.c debug.c display.c emit.c emulation.c histogram.c hmmio.c mathsupport.c masks.c misc.c modelmakers.c plan7.c plan9.c postprob.c prior.c pvm.c threads.c tophits.c trace.c config.h funcs.h globals.h postprob.h structs.h version.h
libhmmer_la_LDFLAGS = -version-info 0:0:0
libhmmer_la_CPPFLAGS = -I$(top_srcdir)/include
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  hmmer/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  hmmer/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libhmmer.la: $(libhmmer_la_OBJECTS) $(libhmmer_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libhmmer_la_LDFLAGS) $(libhmmer_la_OBJECTS) $(libhmmer_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libhmmer_la-alphabet.Plo
include ./$(DEPDIR)/libhmmer_la-core_algorithms.Plo
include ./$(DEPDIR)/libhmmer_la-debug.Plo
include ./$(DEPDIR)/libhmmer_la-display.Plo
include ./$(DEPDIR)/libhmmer_la-emit.Plo
include ./$(DEPDIR)/libhmmer_la-emulation.Plo
include ./$(DEPDIR)/libhmmer_la-histogram.Plo
include ./$(DEPDIR)/libhmmer_la-hmmio.Plo
include ./$(DEPDIR)/libhmmer_la-masks.Plo
include ./$(DEPDIR)/libhmmer_la-mathsupport.Plo
include ./$(DEPDIR)/libhmmer_la-misc.Plo
include ./$(DEPDIR)/libhmmer_la-modelmakers.Plo
include ./$(DEPDIR)/libhmmer_la-plan7.Plo
include ./$(DEPDIR)/libhmmer_la-plan9.Plo
include ./$(DEPDIR)/libhmmer_la-postprob.Plo
include ./$(DEPDIR)/libhmmer_la-prior.Plo
include ./$(DEPDIR)/libhmmer_la-pvm.Plo
include ./$(DEPDIR)/libhmmer_la-threads.Plo
include ./$(DEPDIR)/libhmmer_la-tophits.Plo
include ./$(DEPDIR)/libhmmer_la-trace.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libhmmer_la-alphabet.lo: alphabet.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-alphabet.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-alphabet.Tpo" -c -o libhmmer_la-alphabet.lo `test -f 'alphabet.c' || echo '$(srcdir)/'`alphabet.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-alphabet.Tpo" "$(DEPDIR)/libhmmer_la-alphabet.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-alphabet.Tpo"; exit 1; fi
#	source='alphabet.c' object='libhmmer_la-alphabet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-alphabet.lo `test -f 'alphabet.c' || echo '$(srcdir)/'`alphabet.c

libhmmer_la-core_algorithms.lo: core_algorithms.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-core_algorithms.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-core_algorithms.Tpo" -c -o libhmmer_la-core_algorithms.lo `test -f 'core_algorithms.c' || echo '$(srcdir)/'`core_algorithms.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-core_algorithms.Tpo" "$(DEPDIR)/libhmmer_la-core_algorithms.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-core_algorithms.Tpo"; exit 1; fi
#	source='core_algorithms.c' object='libhmmer_la-core_algorithms.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-core_algorithms.lo `test -f 'core_algorithms.c' || echo '$(srcdir)/'`core_algorithms.c

libhmmer_la-debug.lo: debug.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-debug.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-debug.Tpo" -c -o libhmmer_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-debug.Tpo" "$(DEPDIR)/libhmmer_la-debug.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-debug.Tpo"; exit 1; fi
#	source='debug.c' object='libhmmer_la-debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

libhmmer_la-display.lo: display.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-display.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-display.Tpo" -c -o libhmmer_la-display.lo `test -f 'display.c' || echo '$(srcdir)/'`display.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-display.Tpo" "$(DEPDIR)/libhmmer_la-display.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-display.Tpo"; exit 1; fi
#	source='display.c' object='libhmmer_la-display.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-display.lo `test -f 'display.c' || echo '$(srcdir)/'`display.c

libhmmer_la-emit.lo: emit.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-emit.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-emit.Tpo" -c -o libhmmer_la-emit.lo `test -f 'emit.c' || echo '$(srcdir)/'`emit.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-emit.Tpo" "$(DEPDIR)/libhmmer_la-emit.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-emit.Tpo"; exit 1; fi
#	source='emit.c' object='libhmmer_la-emit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-emit.lo `test -f 'emit.c' || echo '$(srcdir)/'`emit.c

libhmmer_la-emulation.lo: emulation.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-emulation.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-emulation.Tpo" -c -o libhmmer_la-emulation.lo `test -f 'emulation.c' || echo '$(srcdir)/'`emulation.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-emulation.Tpo" "$(DEPDIR)/libhmmer_la-emulation.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-emulation.Tpo"; exit 1; fi
#	source='emulation.c' object='libhmmer_la-emulation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-emulation.lo `test -f 'emulation.c' || echo '$(srcdir)/'`emulation.c

libhmmer_la-histogram.lo: histogram.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-histogram.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-histogram.Tpo" -c -o libhmmer_la-histogram.lo `test -f 'histogram.c' || echo '$(srcdir)/'`histogram.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-histogram.Tpo" "$(DEPDIR)/libhmmer_la-histogram.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-histogram.Tpo"; exit 1; fi
#	source='histogram.c' object='libhmmer_la-histogram.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-histogram.lo `test -f 'histogram.c' || echo '$(srcdir)/'`histogram.c

libhmmer_la-hmmio.lo: hmmio.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-hmmio.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-hmmio.Tpo" -c -o libhmmer_la-hmmio.lo `test -f 'hmmio.c' || echo '$(srcdir)/'`hmmio.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-hmmio.Tpo" "$(DEPDIR)/libhmmer_la-hmmio.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-hmmio.Tpo"; exit 1; fi
#	source='hmmio.c' object='libhmmer_la-hmmio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-hmmio.lo `test -f 'hmmio.c' || echo '$(srcdir)/'`hmmio.c

libhmmer_la-mathsupport.lo: mathsupport.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-mathsupport.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-mathsupport.Tpo" -c -o libhmmer_la-mathsupport.lo `test -f 'mathsupport.c' || echo '$(srcdir)/'`mathsupport.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-mathsupport.Tpo" "$(DEPDIR)/libhmmer_la-mathsupport.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-mathsupport.Tpo"; exit 1; fi
#	source='mathsupport.c' object='libhmmer_la-mathsupport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-mathsupport.lo `test -f 'mathsupport.c' || echo '$(srcdir)/'`mathsupport.c

libhmmer_la-masks.lo: masks.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-masks.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-masks.Tpo" -c -o libhmmer_la-masks.lo `test -f 'masks.c' || echo '$(srcdir)/'`masks.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-masks.Tpo" "$(DEPDIR)/libhmmer_la-masks.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-masks.Tpo"; exit 1; fi
#	source='masks.c' object='libhmmer_la-masks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-masks.lo `test -f 'masks.c' || echo '$(srcdir)/'`masks.c

libhmmer_la-misc.lo: misc.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-misc.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-misc.Tpo" -c -o libhmmer_la-misc.lo `test -f 'misc.c' || echo '$(srcdir)/'`misc.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-misc.Tpo" "$(DEPDIR)/libhmmer_la-misc.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-misc.Tpo"; exit 1; fi
#	source='misc.c' object='libhmmer_la-misc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-misc.lo `test -f 'misc.c' || echo '$(srcdir)/'`misc.c

libhmmer_la-modelmakers.lo: modelmakers.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-modelmakers.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-modelmakers.Tpo" -c -o libhmmer_la-modelmakers.lo `test -f 'modelmakers.c' || echo '$(srcdir)/'`modelmakers.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-modelmakers.Tpo" "$(DEPDIR)/libhmmer_la-modelmakers.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-modelmakers.Tpo"; exit 1; fi
#	source='modelmakers.c' object='libhmmer_la-modelmakers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-modelmakers.lo `test -f 'modelmakers.c' || echo '$(srcdir)/'`modelmakers.c

libhmmer_la-plan7.lo: plan7.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-plan7.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-plan7.Tpo" -c -o libhmmer_la-plan7.lo `test -f 'plan7.c' || echo '$(srcdir)/'`plan7.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-plan7.Tpo" "$(DEPDIR)/libhmmer_la-plan7.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-plan7.Tpo"; exit 1; fi
#	source='plan7.c' object='libhmmer_la-plan7.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-plan7.lo `test -f 'plan7.c' || echo '$(srcdir)/'`plan7.c

libhmmer_la-plan9.lo: plan9.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-plan9.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-plan9.Tpo" -c -o libhmmer_la-plan9.lo `test -f 'plan9.c' || echo '$(srcdir)/'`plan9.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-plan9.Tpo" "$(DEPDIR)/libhmmer_la-plan9.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-plan9.Tpo"; exit 1; fi
#	source='plan9.c' object='libhmmer_la-plan9.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-plan9.lo `test -f 'plan9.c' || echo '$(srcdir)/'`plan9.c

libhmmer_la-postprob.lo: postprob.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-postprob.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-postprob.Tpo" -c -o libhmmer_la-postprob.lo `test -f 'postprob.c' || echo '$(srcdir)/'`postprob.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-postprob.Tpo" "$(DEPDIR)/libhmmer_la-postprob.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-postprob.Tpo"; exit 1; fi
#	source='postprob.c' object='libhmmer_la-postprob.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-postprob.lo `test -f 'postprob.c' || echo '$(srcdir)/'`postprob.c

libhmmer_la-prior.lo: prior.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-prior.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-prior.Tpo" -c -o libhmmer_la-prior.lo `test -f 'prior.c' || echo '$(srcdir)/'`prior.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-prior.Tpo" "$(DEPDIR)/libhmmer_la-prior.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-prior.Tpo"; exit 1; fi
#	source='prior.c' object='libhmmer_la-prior.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-prior.lo `test -f 'prior.c' || echo '$(srcdir)/'`prior.c

libhmmer_la-pvm.lo: pvm.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-pvm.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-pvm.Tpo" -c -o libhmmer_la-pvm.lo `test -f 'pvm.c' || echo '$(srcdir)/'`pvm.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-pvm.Tpo" "$(DEPDIR)/libhmmer_la-pvm.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-pvm.Tpo"; exit 1; fi
#	source='pvm.c' object='libhmmer_la-pvm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-pvm.lo `test -f 'pvm.c' || echo '$(srcdir)/'`pvm.c

libhmmer_la-threads.lo: threads.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-threads.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-threads.Tpo" -c -o libhmmer_la-threads.lo `test -f 'threads.c' || echo '$(srcdir)/'`threads.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-threads.Tpo" "$(DEPDIR)/libhmmer_la-threads.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-threads.Tpo"; exit 1; fi
#	source='threads.c' object='libhmmer_la-threads.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-threads.lo `test -f 'threads.c' || echo '$(srcdir)/'`threads.c

libhmmer_la-tophits.lo: tophits.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-tophits.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-tophits.Tpo" -c -o libhmmer_la-tophits.lo `test -f 'tophits.c' || echo '$(srcdir)/'`tophits.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-tophits.Tpo" "$(DEPDIR)/libhmmer_la-tophits.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-tophits.Tpo"; exit 1; fi
#	source='tophits.c' object='libhmmer_la-tophits.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-tophits.lo `test -f 'tophits.c' || echo '$(srcdir)/'`tophits.c

libhmmer_la-trace.lo: trace.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libhmmer_la-trace.lo -MD -MP -MF "$(DEPDIR)/libhmmer_la-trace.Tpo" -c -o libhmmer_la-trace.lo `test -f 'trace.c' || echo '$(srcdir)/'`trace.c; \
	then mv -f "$(DEPDIR)/libhmmer_la-trace.Tpo" "$(DEPDIR)/libhmmer_la-trace.Plo"; else rm -f "$(DEPDIR)/libhmmer_la-trace.Tpo"; exit 1; fi
#	source='trace.c' object='libhmmer_la-trace.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhmmer_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libhmmer_la-trace.lo `test -f 'trace.c' || echo '$(srcdir)/'`trace.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
