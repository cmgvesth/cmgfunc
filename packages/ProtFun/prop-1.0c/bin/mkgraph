#! /usr/bin/gawk -f
#
# This script is called from inside the main 'netOglyc' script when the "-g"
# option is enabled. As input it should receive the 'graph.raw.dat', properly
# sorted. It will produce 2 files:
#
#	GRDAT	- data to plot in 3 columns: residue,score,treshold
#	stdout	- GNUPLOT script to run
#
# Command line parameters:
#
#	GRDAT	- datafile name (mandatory)
#	GIF	- intended graphic format ( =0:PS, otherwise GIF)
#
# The resulting GNUPLOT script will produce a PostScript file or a GIF file
# depending on the value of GIF variable. Other adjustable parameters can be
# defined in the BEGIN block.
#
# VERSION: 10 June 1997, K.Rapacki
#

BEGIN { # Configure ===========================================================
  FONTSIZE	= 22;				# PostScript only
  TITLETEXT	= "NetOGlyc 2.0: predicted O-glycosylation sites in";
  XLABELTEXT	= "Sequence position";
  YLABELTEXT	= "O-glycosylation potential";

  PPM2GIF	= "/usr/unic/bin/ppmtogif 2>/dev/null"
}

/^Name:/ { # Sequence name and length =========================================
  name=$2; len=$NF;
  
  if (GIF)
     gsub("_","\-",name);	# incomplete font: no "_" in PBM
  else
     gsub("_","\\_",name);	# prevent GNUPLOT from interpreting "_"	
  
  if (GIF) {
     print "set terminal pbm small color ";
     print "set output \"|" PPM2GIF "\"";
  }
  else {
     print "set terminal post eps color solid " FONTSIZE;
     print "set output \"|sed 's/^50 50 translate$/15 50 translate/'\"";
  }
  print "set title \"" TITLETEXT,name "\"";
  if (GIF)
     print "set size 1.0,0.6";
  else
     print "set size 1.5,0.9";
  print "set xrange [0:" len "]";
  print "set yrange [0:1.2]";
  print "set tics out";
  print "set ytics 0,1";
  print "set xlabel \"" XLABELTEXT "\" 0,0";
  if (GIF)
     print "set ylabel \"" YLABELTEXT "\" 6,-2";
  else
     print "set ylabel \"" YLABELTEXT "\" 6,-1";
  if (GIF) {
     printf("plot '%s' u 1:2 t\"Potential\" w i 3,",GRDAT);
     printf(" '%s' u 1:3 t\"Threshold\" w l 1\n",GRDAT);
  }
  else {
     printf("plot '%s' u 1:2 t\"Potential\" w i 2,",GRDAT);
     printf(" '%s' u 1:3 t\"Threshold\" w l 3\n",GRDAT);
  }
  next;
}

{ # Data to plot ==============================================================
  print $3,$4,$5 >>GRDAT;
  print $3,$4,$5 >>GRDAT;
}
