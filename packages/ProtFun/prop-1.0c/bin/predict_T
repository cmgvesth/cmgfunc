#!/bin/bash -f
##########################################################################
#	predict_T
#
# Run ensemble of 5 networks
# Input = <in.how> (How-file)
# Output = Residues, average score, 5 individual scores
##########################################################################


winsize=9			# window size for NN
hidden=8			# number of NN hidden units 
howfile=$1			# 
number=1			# process only single sequence
out_alph=tz			# output alphabet
res=T			# residue type
fullres=Threonine		# full residue name


##########################################################################
# Run HOW98 for each of the 5 synapse file
##########################################################################

for combi in abcd bcde cdea deab eabc
do
	syn="${res}_${combi}.syn"
								
# run system-specific HOW using the configuration parameters shown below

	$HOW98 << END_OF_HOW > $howfile.$res.out.$combi
**************************************************************************
                HOW INPUT PARAMETERS (C) COPYRIGHT 1989-1998
**************************************************************************
**************************************************************************
 RUN IDENTIFICATION ******************************************************
**************************************************************************
TESTRUNID
(RUNID   ** RUN IDENTIFIER)
**************************************************************************
 NETWORK ARCHITECTURE ****************************************************
**************************************************************************
21
(NIALPH  ** NUMBER OF LETTERS IN THE INPUT ALPHABET)
2  
(NOALPH  ** NUMBER OF LETTERS IN THE OUTPUT ALPHABET)
$winsize
(NWSIZE  ** WINDOW SIZE IN LETTERS)
$hidden
(N2HID   ** NUMBER OF UNITS IN THE SECOND LAYER)
0
(N3HID   ** NUMBER OF UNITS IN THE THIRD LAYER)
0
(N4HID   ** NUMBER OF UNITS IN THE FOURTH LAYER)
3
(NLAYER  ** NUMBER OF LAYERS, INCLUDING INPUT AND OUTPUT)
-90
(ICOVER  ** SIZE OF RECEPTIVE FIELDS FOR NEURONS IN FIRST HIDDEN LAYER)
-2
(IHOLEL  ** LEFT POSITION OF HOLE IN WINDOW)
-1
(IHOLER  ** RIGHT POSITION OF HOLE IN WINDOW) 
-1 
(LENPOS  ** ADD SEQUENCE POSITION UNITS TO INPUT LAYER)
-1 
(LSIZE   ** ADD SEQUENCE SIZE UNITS TO INPUT LAYER)
6671
(MAXLEN  ** MAXIMAL SEQUENCE LENGTH FOR NORMALIZATION IN LSIZE MODE)
-1       
(LCOMPO  ** ADD COMPOSITION UNITS TO INPUT LAYER)
**************************************************************************
 MODE SELECTION **********************************************************
**************************************************************************
1
(MODE    ** SAMPLE OR HOMOLOGY (ONE-SEQUENCE-AT-TIME))
1
(INORM   ** IN SAMPLE MODE: FULL OR INCREMENTAL TRAINING)
-1
(IPRIM   ** SAMPLE/HOMOLOGY MODES: PRIMARY OR SECONDARY OUTPUT CATAGORIES)
-1
(IDIST   ** SAMPLE AND SECONDARY MODE: DISTANCE MATRIX OUTPUT OR NOT)
-1
(IVIRGN  ** SYNAPSES READ FROM FILE OR RANDOM)
**************************************************************************
 CODING ******************************************************************
**************************************************************************
FIVWMLCHYAGNRTPDEQSK
(LETIN   ** INPUT ALPHABET - INPUT CATEGORIES)
ACGT
(LETALT  ** ALTERNATIVE INPUT ALPHABET) FIVWMLCHYAGNRTPDEQSK
$out_alph
(LETOUT  ** OUTPUT ALPHABET - OUTPUT CATEGORIES)
1
(NRULES  ** NUMBER OF CONVERSION RULES FOR OUTPUT CATAGORIES)
A=A
(RULES   ** CONVERSION RULES FOR OUTPUT CATAGORIES)
0.1
(SATMIN  ** ZERO TRAINING TARGET VALUE)
0.9
(SATMAX  ** ONE TRAINING TARGET VALUE)
0.0
(OFFNUM  ** ZERO INPUT VALUE)
1.0
(ONNUM   ** ONE INPUT VALUE)
-32
(LENPAT  ** LENGTH OF INPUT CATEGORY PATTERNS)
**************************************************************************
 NETWORK INITIATION ******************************************************
**************************************************************************
0.1
(SYNFAC  ** ABSOLUTE VALUE FOR RANDOM SYNAPSES)
30
(CUTOFF  ** ABSOLUTE VALUE OF LIMIT FOR TRANSFER FUNCTION TABLE)
**************************************************************************
 INPUT FORMATS ***********************************************************
**************************************************************************
-1
(IDNA    ** USE DNA SEQUENCE (AND AMINO ACID SEQUENCE) AS NETWORK INPUT)
1
(ITMODE  ** READ SECONDARY- AND/OR DM INPUT FROM TEST FILE - 0,1,2)
**************************************************************************
 LEARNING AND TEST PARAMETERS ********************************************
**************************************************************************
0.05
(ETA     ** LEARNING RATE)
1
(ICETA   ** SEPARATE LEARNING RATE FOR EACH CATEGORY)
0.0
(ALPHA   ** MOMENTUM STRENGTH)
50
(LSTOP   ** MAXIMAL NUMBER OF TRAINING SWEEPS) 
1 1 1 1 1 1 1 1 1 1 1 1
(IRPEAT  ** NUMBER OF BACKPROP REPEATS WITH SAME INPUT (NOALPH VALUES))
1
(ITEST   ** TEST FREQUENCY)
0.01
(BPLIM   ** ABSOLUTE VALUE FOR BACKPROPAGATION TO TAKE PLACE)
99.999
(CLIMIT  ** WHEN LEARNING SAMPLE IS INCREMENTED (NORMAL OUTPUT SUCCESS)
99.0
(DLIMIT  ** WHEN LEARNING SAMPLE IS INCREMENTED (DISTANCE OUTPUT SUCCESS)
1
(IRAN    ** LEARNING SAMPLE SHUFFLE)
4
(IPIECE  ** INCREMENTAL LEARNING MODE: NUMBER OF PARTS IN LEARNING SAMPLE)
-1
(IEUP    ** SYNAPS UPDATE: SAMPLE OR SINGLE WINDOW CONFIGURATION) 
5432199 
(ISSEED  ** SYNAPS INITIALISATION SEED)
**************************************************************************
 LEARNING AND TEST SAMPLES ***********************************************
**************************************************************************
0
(LEARNC  ** NUMBER OF SEQUENCES IN TRAINING FILE)
0
(LSKIP   ** NUMBER OF SEQUENCES TO SKIP IN TRAINING FILE)
-1
(IFULL   ** REDUCE THE SEQUENCES TO FULL WINDOW CONFIGURATIONS)
-1
(IREDUC  ** REDUCE THE TRAINING TO SUBSEQUENCES OF SPECIFIC SITES)
20
(ILEFT   ** THE NUMBER OF LETTERS TO THE LEFT OF EACH SPECIFIC SITE)
20
(IRIGHT  ** THE NUMBER OF LETTERS TO THE RIGHT OF EACH SPECIFIC SITE)
S
(LREDUC  ** THE OUTPUT LETTER CENTRAL IN SPECIFIC SITE REDUCTION)
$number 
(TESTC   ** NUMBER OF SEQUENCES IN TEST FILE)
0
(ITSKIP  ** NUMBER OF SEQUENCES TO SKIP IN TEST FILE)
**************************************************************************
 EVALUATION OF NETWORK OUTPUT ********************************************
**************************************************************************
2
(MEVAL   ** EVAL MODE, 1:WINNER-TAKE-ALL, 2:VARIABLE FIRST LETTER CUTOFF)
0.5
(EVAL    ** ASSIGNMENT CUTOFF FOR THE FIRST LETTER /0.0 - 1.0/  
1
(IWIN    ** FOR NETS = 2, 1:HIGHEST ACTIVITY OUTPUT, 2:LETOUT(1) OR OUTPUT
**************************************************************************
 OUTPUT LEVELS AND FREQUENCIES *******************************************
**************************************************************************
1000
(ISYN    ** SYNAPS DUMP FREQUENCY WHEN >0; WHEN <0 DUMP WHEN CC INCREASES)
1000
(IHIST   ** SYNAPS HISTOGRAM GENERATION FREQUENCY) 
-1
(ICPER   ** PERCENTAGE OUTPUT FOR EVERY EXAMPLE)
-1
(ICSEQ   ** SEQUENCE OUTPUT FOR EVERY EXAMPLE)
-1
(ICANSW  ** CATEGORY STATISTICS FOR EVERY EXAMPLE)
1
(IANSW   ** CATEGORY STATISTICS FOR SAMPLES)
-1
(I1LET   ** FIRST LETTER DEVIATION - SAMPLES AND/OR EXAMPLES)
1
(ICOR    ** COMPUTATION OF CORRELATION COEFFICIENTS)  
1
(IACTIV  ** SINGLE WINDOW OUTPUT ACTIVITIES, TEST ONLY)
-1
(IWHERE  ** TEST: LOCALIZATION OF MATCH)
-1
(IQUAL   ** TEST: CONFIDENCE LEVELS)
-1
(ILEVEL  ** WRITE OUTPUT NEURON ACTIVITIES ON FILE)
-1
(IAFILE  ** WRITE OUTPUT CATEGORY ASSIGNMENTS ON FILE)
-1
(ILIST   ** WRITE LEARNT SUBSEQUENCES OF SPECIFIC SITES ON FILE)
-1
(IDMOUT  ** TEST: FULL DISTANCE MATRIX OUTPUT) 
**************************************************************************
 INPUT/OUTPUT FILE NAMES *************************************************
**************************************************************************
$PHOSSYN/$syn
(SYNFIL  ** SYNAPS FILE NAME)
$howfile
(TESFIL  ** TEST SEQUENCE CODE FILE NAME)
$howfile
(LEAFIL  ** LEARN SEQUENCE CODE FILE NAME)
levels.dat
(LEVFIL  ** ACTIVITY LEVELS FILE NAME)
record.dat 
(RECFIL  ** CATEGORY ASSIGNMENT FILE NAME)
record.dat 
(DNFIL   ** LEARNT SUBSEQUENCE FILE NAME) 
pat_13.dat
(PATFIL  ** INPUT CATEGORY PATTERN FILE NAME) 
**************************************************************************
**************************************************************************
END_OF_HOW

done  	# done of 'for' loop

wait 	# wait for all 5 processes

# format of the HOW98 output
#       1 M z z  0.066 0.935
#       2 E z z  0.010 0.990
# ...



##########################################################################
# Extract scores
##########################################################################

for combi in abcd bcde cdea deab eabc
do
### CHANGE RESIDUE FOLLOWING LINE ACCORDING TO RESIDUE
	egrep 'T [tz] [tz]' $howfile.$res.out.$combi |	\
	gawk '{print $5}'> $howfile.$res.$combi in.score
done


###########################################################################
# Extract sequence name from HOW-file (not shown in HOW98 output)
###########################################################################

seqname=`egrep '[0-9] [A-Za-z0-9]' $howfile|gawk '{print $2}' `

###########################################################################
# Print and extract Seqname, Position and Assignment for $res
###########################################################################


### CHANGE RESIDUE FOLLOWING LINE ACCORDING TO RESIDUE
egrep 'T [tz] [tz]' $howfile.$res.out.abcd | 		\
gawk -v seqn=$seqname '{print seqn, $1,$3}' > $howfile.$res.name

paste 	$howfile.$res.name $howfile.$res.abcd.score 		\
	$howfile.$res.bcde.score $howfile.$res.cdea.score 	\
	$howfile.$res.deab.score $howfile.$res.eabc.score > 	\
	$howfile.$res.allscores

############################################################################
# Make sum of all 5 scores, calculate average. 
############################################################################
 
cat $howfile.$res.allscores| gawk '{sum=$4+$5+$6+$7+$8;						\
	printf "%-14s %6d %2s %7.3f %3s %5.3f %7.3f %7.3f %7.3f %7.3f %3s\n",  			\
	$1,$2,$3,sum/5," ( ",$4,$5,$6,$7,$8," ) "}' | 						\
	gawk -v residue=$res '{if ($4>= 0.5) print $0,"*"residue"*"; else print $0,"."}' > 	\
	$howfile.$res.scoretable

############################################################################
# Get 9-mer sequence windows for each position ($2) using <getseqstr>
############################################################################



rm -f $howfile.$res.windows	# make sure file does not exist

gawk -f $PHOSBIN/getseqstr $howfile >$howfile.seqstr

for val in `cat $howfile.$res.scoretable | gawk '{print $2;}'`
do
	cat $howfile.seqstr | gawk -v V=$val '{print substr($1,V,9);}' \
		>>$howfile.$res.windows
done

touch $howfile.$res.windows

# if $howfile.$res.windows is empty, $howfile contains no $res residues

if [ -s $howfile.$res.windows ]
then 
	paste $howfile.$res.scoretable $howfile.$res.windows > $howfile.$res.scoretable.ex
	mv $howfile.$res.scoretable.ex $howfile.$res.scoretable
fi

############################################################################
# if Verbose, dump all data, otherwise show only average scores
############################################################################

if [ $v_opt -eq 1 ]
then				# Verbose option selected
	cat $howfile.$res.scoretable			
elif [ -s $howfile.$res.windows ]
then 	# Sequence does contain residues of type $res		
	echo '                '$fullres' predictions'
	echo '\nName           Pos   Context    Score  Pred'
        echo '_________________________v_________________'

	cat $howfile.$res.scoretable| \
	gawk '{printf "%-12s %5d %11s %6.3f %4s\n", $1,$2,$13,$4,$12}'

        echo '_________________________^_________________'
	echo ''

fi
exit

############################################################################
# end of script
############################################################################

